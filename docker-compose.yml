version: '3.9' # optional since v1.27.0

volumes:
    elasticsearch-data:
        driver: local

# networks:
#   app-tier:
#     driver: bridge

services:
    etcdkeeper:
        image: evildecay/etcdkeeper
        container_name: etcdkeeper
        environment:
            - ETCD_PEER_ADDRESS=http://etcd:2379
            # - navigate to http://localhost:8080/etcdkeeper - and put host: etcd:2379 / etcd 2380
        ports:
            - 8080:8080

    etcd:
        image: 'bitnami/etcd:latest'
        container_name: etcd
        environment:
            - ALLOW_NONE_AUTHENTICATION=yes
            - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
            - ETCD_ENABLE_V2=true
            - ETCD_NAME=feature_toggle_etcd
            - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
            - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://localhost:2380
            - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
            - ETCD_INITIAL_CLUSTER=default=http://localhost:2380
        volumes:
            - ./.volume/etcd:/bitnami/etcd
        ports:
            - 2379:2379
            - 2380:2380

    # RUN JUST ONCE - than comment this lines!
    #etcd-initializer:
    #    container_name: etcd-initializer
    #    build:
    #        context: ./backup/etcd
    #        dockerfile: Etcd-bitnami-initializer.Dockerfile
    #    depends_on:
    #        - etcd
    #    restart: 'no'

    #elasticsearch:
    #    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    #    container_name: elasticsearch
    #    environment:
    #        - xpack.security.enabled=false
    #        - discovery.type=single-node
    #    ulimits:
    #        memlock:
    #            soft: -1
    #            hard: -1
    #        nofile:
    #            soft: 65536
    #            hard: 65536
    #    cap_add:
    #        - IPC_LOCK
    #    volumes:
    #        - elasticsearch-data:/usr/share/elasticsearch/data
    #    ports:
    #        - 9200:9200
    #        - 9300:9300

    #kibana:
    #    container_name: kibana
    #    image: docker.elastic.co/kibana/kibana:7.11.2
    #    environment:
    #        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    #    ports:
    #        - 5601:5601
    #    depends_on:
    #        - elasticsearch

    #grafana:
    #    image: grafana/grafana
    #    container_name: grafana
    #    restart: unless-stopped
    #    # links:
    #    #   - prometheus:prometheus
    #    volumes:
    #        - ./.volume/grafana:/var/lib/grafana
    #    environment:
    #        - GF_SECURITY_ADMIN_PASSWORD=admin
    #        - GF_USERS_ALLOW_SIGN_UP=false
    #        - GF_SERVER_DOMAIN=myrul.com
    #        - GF_SMTP_ENABLED=true
    #        - GF_SMTP_HOST=smtp.gmail.com:587
    #        - GF_SMTP_USER=myadrress@gmail.com
    #        - GF_SMTP_PASSWORD=mypassword
    #        - GF_SMTP_FROM_ADDRESS=myaddress@gmail.com
    #        - GF_INSTALL_PLUGINS=simpod-json-datasource,grafana-clock-panel,grafana-worldmap-panel,natel-plotly-panel
    #    ports:
    #        - 3000:3000

    #redis:
    #    image: redis
    #    container_name: redis
    #    ports:
    #        - 6379:6379



    # not need:
    # etcdviewer:
    #    image: nikfoundas/etcd-viewer
    #    container_name: etcdviewer
    #    environment:
    #        - ETCD_PEER_ADDRESS=http://etcd:2379
    #        # - go to navigation - add registery - (name: "myRegistry", peer-address: "http://etcd:2379")
    #    ports:
    #        - 8080:8080

        #etcd:
    #    image: quay.io/coreos/etcd:v3.4.9
    #    ports:
    #        - 2379:2379
    #        - 2380:2380
    #    volume:
    #        - ./.volume/etcd3:/bitnami/etcd
    #    command: etcd
    #    environment:
    #        - ETCD_NAME=feature_toggle_etcd
    #        - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    #        - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
    #        - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://localhost:2380
    #        - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    #        - ETCD_INITIAL_CLUSTER=default=http://localhost:2380


    # didnt test:
    # logstash:
    #   image: docker.elastic.co/logstash/logstash
    #   container_name: logstash
    #   secrets:
    #     - source: logstash.conf
    #       target: /usr/share/logstash/pipeline/logstash.conf
    #     - source: logstash.yml
    #       target: /usr/share/logstash/config/logstash.yml
    #     - source: logstash.keystore
    #       target: /usr/share/logstash/config/logstash.keystore
    #     - source: ca.crt
    #       target: /usr/share/logstash/config/certs/ca/ca.crt
    #   networks: ['stack']
    #   depends_on: ['elasticsearch']
    #   healthcheck:
    #     test: bin/logstash -t
    #     interval: 60s
    #     timeout: 50s
    #     retries: 5

    # etcdmanager:
    #   image: kopeio/etcd-manager
    #   container_name: etcdmanager
    #   environment:
    #     - NAME=etcd:2379
    #   depends_on:
    #     - etcd
    #   ports:
    #     - 4001:4001

    # etcd:
    #   image: "quay.io/coreos/etcd:v3.4.1"
    #   command: [
    #     "etcd",
    #     "--name=etcd0",
    #     "--advertise-client-urls=http://${DOCKER_HOST_IP}:2379,http://${DOCKER_HOST_IP}:4001",
    #     "--listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001",
    #     "--initial-advertise-peer-urls=http://${DOCKER_HOST_IP}:2380",
    #     "--listen-peer-urls=http://0.0.0.0:2380",
    #     "--initial-cluster-token=etcd-cluster-1",
    #     "--initial-cluster=etcd0=http://${DOCKER_HOST_IP}:2380",
    #     "--initial-cluster-state=new"
    #   ]
    #   ports:
    #   - "2379:2379"
    #   - 2380
    #   - 4001
# networks:
#   elastic:
#     driver: bridge
